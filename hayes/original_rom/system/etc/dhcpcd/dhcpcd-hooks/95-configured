# This script runs last, after all network configuration
# has completed. It sets a property to let the framework
# know that setting up the interface is complete.

# For debugging:
setprop dhcp.${interface}.reason "${reason}"

case "${reason}" in
BOUND|INFORM|REBIND|REBOOT|RENEW|TIMEOUT)
    setprop dhcp.${interface}.ipaddress "${new_ip_address}"
    setprop dhcp.${interface}.gateway   "${new_routers%% *}"
    setprop dhcp.${interface}.mask      "${new_subnet_mask}"
    setprop dhcp.${interface}.leasetime "${new_dhcp_lease_time}"
    setprop dhcp.${interface}.server    "${new_dhcp_server_identifier}"
	
	setprop dhcp.dns.domainsearch    	"${new_domain_search}"

    setprop dhcp.${interface}.result "ok"
    ;;

EXPIRE|FAIL|STOP)
    setprop dhcp.${interface}.result "failed"
	setprop dhcp.dns.domainsearch    	""
    ;;

IPV4LL)
    case "${autoIP}" in
    1)
    	setprop dhcp.${interface}.ipaddress "${new_ip_address}"
	setprop dhcp.${interface}.gateway   "${new_routers%% *}"
        setprop dhcp.${interface}.mask      "${new_subnet_mask}"
        setprop dhcp.${interface}.leasetime "${new_dhcp_lease_time}"
        setprop dhcp.${interface}.server    "${new_dhcp_server_identifier}"

        setprop dhcp.${interface}.result "ok"
        ;;
   
    *)
        setprop dhcp.${interface}.result "failed"
        ;;
    esac;;

RELEASE)
    setprop dhcp.${interface}.result "released"
	setprop dhcp.dns.domainsearch    	""
    ;;
esac
